from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather
TOKEN = "7348973950:AAHoxJe03ITSSmiFQatp-nOx6-7t4-AjyIg"

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏
main_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
main_keyboard.add(KeyboardButton("üîπ –ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"))
main_keyboard.add(KeyboardButton("üõí –ö–∞–∫ –ø–æ–∫—É–ø–∞—Ç—å –Ω–∞ Pinduoduo"))
main_keyboard.add(KeyboardButton("üì¶ –î–æ—Å—Ç–∞–≤–∫–∞ –≤ –ê–∫—Å—É–∫–µ–Ω—Ç"))
main_keyboard.add(KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"))

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –ø–æ–∫—É–ø–∫–∞–º–∏ –Ω–∞ Pinduoduo. –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:",
        reply_markup=main_keyboard
    )

# –û—Ç–≤–µ—Ç—ã –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.message_handler(lambda message: message.text == "üîπ –ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
async def registration_info(message: types.Message):
    await message.answer(
        "1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Pinduoduo üì≤\n"
        "2Ô∏è‚É£ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è —Å –∫–∏—Ç–∞–π—Å–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –∏–ª–∏ —á–µ—Ä–µ–∑ WeChat üìß\n"
        "3Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∞—Å—Ç—Ä–æ–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ üìç"
    )

@dp.message_handler(lambda message: message.text == "üõí –ö–∞–∫ –ø–æ–∫—É–ø–∞—Ç—å –Ω–∞ Pinduoduo")
async def buying_info(message: types.Message):
    await message.answer(
        "1Ô∏è‚É£ –í—ã–±–µ—Ä–∏ —Ç–æ–≤–∞—Ä –∏ –¥–æ–±–∞–≤—å –≤ –∫–æ—Ä–∑–∏–Ω—É üõçÔ∏è\n"
        "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å —Å–∫–∏–¥–∫–∏ –∏ –≥—Ä—É–ø–ø–æ–≤—ã–µ –ø–æ–∫—É–ø–∫–∏ üìâ\n"
        "3Ô∏è‚É£ –û–ø–ª–∞—Ç–∏ —á–µ—Ä–µ–∑ WeChat Pay –∏–ª–∏ Alipay üí≥"
    )

@dp.message_handler(lambda message: message.text == "üì¶ –î–æ—Å—Ç–∞–≤–∫–∞ –≤ –ê–∫—Å—É–∫–µ–Ω—Ç")
async def delivery_info(message: types.Message):
    await message.answer(
        "1Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ üöõ\n"
        "2Ô∏è‚É£ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: Cainiao, CDEK üì¶\n"
        "3Ô∏è‚É£ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: 15-30 –¥–Ω–µ–π ‚è≥"
    )

@dp.message_handler(lambda message: message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
async def ask_question(message: types.Message):
    await message.answer("–ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å! üòä")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
